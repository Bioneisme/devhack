---
version: "3.8"

services:
  db:
    image: 'postgres:14-bullseye'
    container_name: devhack-db
    restart: always
    environment:
      - POSTGRES_USER=devroot
      - POSTGRES_PASSWORD=devrootpassword
      - POSTGRES_DB=devhack
      - PGDATA=/var/lib/postgresql/data
      - LANG=en_US.utf8
    networks:
      - shared-network
    volumes:
      - './postgresql-data:/var/lib/postgresql/data'

  backend:
    image: 'devhack-backend:dev1'
    container_name: devhack-backend
    restart: always
    build:
      context: backend
    environment:
      - NODE_ENV=development
      - PG_URL=postgres://devroot:devrootpassword@devhack-db:5432/devhack
      - JWT_ACCESS_SECRET=access_secret_key1592034
      - JWT_REFRESH_SECRET=refresh_secret_key5643417
      - BOT_TOKEN=6093495160:AAHTdUk5Va6nQ2lWOS4o_Yp-L8D4qah34TU
      - LOGS_CHAT_ID=-749478623

      - SERVER_HOST=127.0.0.1
      - SERVER_PORT=5000
      - CLIENT_URL_DEV=http://localhost:3000
      - CLIENT_URL=https://devhack.13lab.tech
    ports:
      - "5000:5000"
    depends_on:
      - db
    networks:
      - shared-network

#  frontend:
#    image: 'devhack-frontend:dev1'
#    container_name: devhack-frontend
#    restart: always
#    build:
#      context: frontend
#    ports:
#      - "3000:3000"
#    depends_on:
#      - backend
#    networks:
#      - shared-network

  nginx:
    image: nginx:latest
    container_name: devhack-nginx
    restart: always
    depends_on:
      - backend
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./certbot/www:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/nginx/ssl/:ro
    networks:
      - shared-network

  certbot:
    image: certbot/certbot:latest
    container_name: devhack-certbot
    volumes:
      - ./certbot/www:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw


networks:
  shared-network:
    driver: bridge
